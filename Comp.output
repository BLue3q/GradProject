Grammar

    0 $accept: program $end

    1 program: ε
    2        | program stmt
    3        | program error

    4 $@1: ε

    5 stmt: TYPE $@1 var_list SEMICOLON

    6 var_list: declarator
    7         | var_list COMMA declarator

    8 declarator: IDENTIFIER
    9           | IDENTIFIER EQUALS NUMBER
   10           | IDENTIFIER EQUALS CHAR_LITERAL
   11           | IDENTIFIER EQUALS STRING_LITERAL


Terminals, with rules where they appear

    $end (0) 0
    error (256) 3
    TYPE <str> (258) 5
    IDENTIFIER <str> (259) 8 9 10 11
    CHAR_LITERAL <str> (260) 10
    STRING_LITERAL <str> (261) 11
    NUMBER <num> (262) 9
    EQUALS (263) 9 10 11
    SEMICOLON (264) 5
    COMMA (265) 7


Nonterminals, with rules where they appear

    $accept (11)
        on left: 0
    program (12)
        on left: 1 2 3
        on right: 0 2 3
    stmt (13)
        on left: 5
        on right: 2
    $@1 (14)
        on left: 4
        on right: 5
    var_list (15)
        on left: 6 7
        on right: 5 7
    declarator (16)
        on left: 8 9 10 11
        on right: 6 7


State 0

    0 $accept: • program $end

    $default  reduce using rule 1 (program)

    program  go to state 1


State 1

    0 $accept: program • $end
    2 program: program • stmt
    3        | program • error

    $end   shift, and go to state 2
    error  shift, and go to state 3
    TYPE   shift, and go to state 4

    stmt  go to state 5


State 2

    0 $accept: program $end •

    $default  accept


State 3

    3 program: program error •

    $default  reduce using rule 3 (program)


State 4

    5 stmt: TYPE • $@1 var_list SEMICOLON

    $default  reduce using rule 4 ($@1)

    $@1  go to state 6


State 5

    2 program: program stmt •

    $default  reduce using rule 2 (program)


State 6

    5 stmt: TYPE $@1 • var_list SEMICOLON

    IDENTIFIER  shift, and go to state 7

    var_list    go to state 8
    declarator  go to state 9


State 7

    8 declarator: IDENTIFIER •
    9           | IDENTIFIER • EQUALS NUMBER
   10           | IDENTIFIER • EQUALS CHAR_LITERAL
   11           | IDENTIFIER • EQUALS STRING_LITERAL

    EQUALS  shift, and go to state 10

    $default  reduce using rule 8 (declarator)


State 8

    5 stmt: TYPE $@1 var_list • SEMICOLON
    7 var_list: var_list • COMMA declarator

    SEMICOLON  shift, and go to state 11
    COMMA      shift, and go to state 12


State 9

    6 var_list: declarator •

    $default  reduce using rule 6 (var_list)


State 10

    9 declarator: IDENTIFIER EQUALS • NUMBER
   10           | IDENTIFIER EQUALS • CHAR_LITERAL
   11           | IDENTIFIER EQUALS • STRING_LITERAL

    CHAR_LITERAL    shift, and go to state 13
    STRING_LITERAL  shift, and go to state 14
    NUMBER          shift, and go to state 15


State 11

    5 stmt: TYPE $@1 var_list SEMICOLON •

    $default  reduce using rule 5 (stmt)


State 12

    7 var_list: var_list COMMA • declarator

    IDENTIFIER  shift, and go to state 7

    declarator  go to state 16


State 13

   10 declarator: IDENTIFIER EQUALS CHAR_LITERAL •

    $default  reduce using rule 10 (declarator)


State 14

   11 declarator: IDENTIFIER EQUALS STRING_LITERAL •

    $default  reduce using rule 11 (declarator)


State 15

    9 declarator: IDENTIFIER EQUALS NUMBER •

    $default  reduce using rule 9 (declarator)


State 16

    7 var_list: var_list COMMA declarator •

    $default  reduce using rule 7 (var_list)
