Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> stmt_list
Rule 1     stmt_list -> stmt_list stmt
Rule 2     stmt_list -> stmt
Rule 3     stmt_list -> empty
Rule 4     empty -> <empty>
Rule 5     stmt -> TYPE var_list SEMICOLON
Rule 6     stmt -> TYPE IDENTIFIER LPAREN param_list RPAREN LBRACE stmt_list RBRACE
Rule 7     stmt -> TYPE MAIN LPAREN RPAREN LBRACE stmt_list RBRACE
Rule 8     var_list -> declarator
Rule 9     var_list -> var_list COMMA declarator
Rule 10    declarator -> IDENTIFIER
Rule 11    declarator -> IDENTIFIER EQUALS value
Rule 12    declarator -> IDENTIFIER LBRACKET NUMBER RBRACKET
Rule 13    declarator -> IDENTIFIER LBRACKET NUMBER RBRACKET EQUALS LBRACE array_values RBRACE
Rule 14    declarator -> IDENTIFIER LBRACKET NUMBER RBRACKET LBRACKET NUMBER RBRACKET
Rule 15    declarator -> IDENTIFIER LBRACKET NUMBER RBRACKET LBRACKET NUMBER RBRACKET EQUALS LBRACE array_values_2d RBRACE
Rule 16    array_values -> value
Rule 17    array_values -> array_values COMMA value
Rule 18    array_values_2d -> LBRACE array_values RBRACE
Rule 19    array_values_2d -> array_values_2d COMMA LBRACE array_values RBRACE
Rule 20    param_list -> empty
Rule 21    param_list -> param_list COMMA param
Rule 22    param_list -> param
Rule 23    param -> TYPE IDENTIFIER
Rule 24    value -> NUMBER
Rule 25    value -> STRING_LITERAL
Rule 26    value -> CHAR_LITERAL

Terminals, with rules where they appear

CHAR_LITERAL         : 26
COMMA                : 9 17 19 21
EQUALS               : 11 13 15
IDENTIFIER           : 6 10 11 12 13 14 15 23
LBRACE               : 6 7 13 15 18 19
LBRACKET             : 12 13 14 14 15 15
LPAREN               : 6 7
MAIN                 : 7
NUMBER               : 12 13 14 14 15 15 24
RBRACE               : 6 7 13 15 18 19
RBRACKET             : 12 13 14 14 15 15
RPAREN               : 6 7
SEMICOLON            : 5
STRING_LITERAL       : 25
TYPE                 : 5 6 7 23
error                : 

Nonterminals, with rules where they appear

array_values         : 13 17 18 19
array_values_2d      : 15 19
declarator           : 8 9
empty                : 3 20
param                : 21 22
param_list           : 6 21
stmt                 : 1 2
stmt_list            : 1 6 7 0
value                : 11 16 17
var_list             : 5 9

Parsing method: LALR

state 0

    (0) S' -> . stmt_list
    (1) stmt_list -> . stmt_list stmt
    (2) stmt_list -> . stmt
    (3) stmt_list -> . empty
    (5) stmt -> . TYPE var_list SEMICOLON
    (6) stmt -> . TYPE IDENTIFIER LPAREN param_list RPAREN LBRACE stmt_list RBRACE
    (7) stmt -> . TYPE MAIN LPAREN RPAREN LBRACE stmt_list RBRACE
    (4) empty -> .

  ! shift/reduce conflict for TYPE resolved as shift
    TYPE            shift and go to state 4
    $end            reduce using rule 4 (empty -> .)

  ! TYPE            [ reduce using rule 4 (empty -> .) ]

    stmt_list                      shift and go to state 1
    stmt                           shift and go to state 2
    empty                          shift and go to state 3

state 1

    (0) S' -> stmt_list .
    (1) stmt_list -> stmt_list . stmt
    (5) stmt -> . TYPE var_list SEMICOLON
    (6) stmt -> . TYPE IDENTIFIER LPAREN param_list RPAREN LBRACE stmt_list RBRACE
    (7) stmt -> . TYPE MAIN LPAREN RPAREN LBRACE stmt_list RBRACE

    TYPE            shift and go to state 4

    stmt                           shift and go to state 5

state 2

    (2) stmt_list -> stmt .

    TYPE            reduce using rule 2 (stmt_list -> stmt .)
    $end            reduce using rule 2 (stmt_list -> stmt .)
    RBRACE          reduce using rule 2 (stmt_list -> stmt .)


state 3

    (3) stmt_list -> empty .

    TYPE            reduce using rule 3 (stmt_list -> empty .)
    $end            reduce using rule 3 (stmt_list -> empty .)
    RBRACE          reduce using rule 3 (stmt_list -> empty .)


state 4

    (5) stmt -> TYPE . var_list SEMICOLON
    (6) stmt -> TYPE . IDENTIFIER LPAREN param_list RPAREN LBRACE stmt_list RBRACE
    (7) stmt -> TYPE . MAIN LPAREN RPAREN LBRACE stmt_list RBRACE
    (8) var_list -> . declarator
    (9) var_list -> . var_list COMMA declarator
    (10) declarator -> . IDENTIFIER
    (11) declarator -> . IDENTIFIER EQUALS value
    (12) declarator -> . IDENTIFIER LBRACKET NUMBER RBRACKET
    (13) declarator -> . IDENTIFIER LBRACKET NUMBER RBRACKET EQUALS LBRACE array_values RBRACE
    (14) declarator -> . IDENTIFIER LBRACKET NUMBER RBRACKET LBRACKET NUMBER RBRACKET
    (15) declarator -> . IDENTIFIER LBRACKET NUMBER RBRACKET LBRACKET NUMBER RBRACKET EQUALS LBRACE array_values_2d RBRACE

    IDENTIFIER      shift and go to state 7
    MAIN            shift and go to state 8

    var_list                       shift and go to state 6
    declarator                     shift and go to state 9

state 5

    (1) stmt_list -> stmt_list stmt .

    TYPE            reduce using rule 1 (stmt_list -> stmt_list stmt .)
    $end            reduce using rule 1 (stmt_list -> stmt_list stmt .)
    RBRACE          reduce using rule 1 (stmt_list -> stmt_list stmt .)


state 6

    (5) stmt -> TYPE var_list . SEMICOLON
    (9) var_list -> var_list . COMMA declarator

    SEMICOLON       shift and go to state 10
    COMMA           shift and go to state 11


state 7

    (6) stmt -> TYPE IDENTIFIER . LPAREN param_list RPAREN LBRACE stmt_list RBRACE
    (10) declarator -> IDENTIFIER .
    (11) declarator -> IDENTIFIER . EQUALS value
    (12) declarator -> IDENTIFIER . LBRACKET NUMBER RBRACKET
    (13) declarator -> IDENTIFIER . LBRACKET NUMBER RBRACKET EQUALS LBRACE array_values RBRACE
    (14) declarator -> IDENTIFIER . LBRACKET NUMBER RBRACKET LBRACKET NUMBER RBRACKET
    (15) declarator -> IDENTIFIER . LBRACKET NUMBER RBRACKET LBRACKET NUMBER RBRACKET EQUALS LBRACE array_values_2d RBRACE

    LPAREN          shift and go to state 12
    SEMICOLON       reduce using rule 10 (declarator -> IDENTIFIER .)
    COMMA           reduce using rule 10 (declarator -> IDENTIFIER .)
    EQUALS          shift and go to state 13
    LBRACKET        shift and go to state 14


state 8

    (7) stmt -> TYPE MAIN . LPAREN RPAREN LBRACE stmt_list RBRACE

    LPAREN          shift and go to state 15


state 9

    (8) var_list -> declarator .

    SEMICOLON       reduce using rule 8 (var_list -> declarator .)
    COMMA           reduce using rule 8 (var_list -> declarator .)


state 10

    (5) stmt -> TYPE var_list SEMICOLON .

    TYPE            reduce using rule 5 (stmt -> TYPE var_list SEMICOLON .)
    $end            reduce using rule 5 (stmt -> TYPE var_list SEMICOLON .)
    RBRACE          reduce using rule 5 (stmt -> TYPE var_list SEMICOLON .)


state 11

    (9) var_list -> var_list COMMA . declarator
    (10) declarator -> . IDENTIFIER
    (11) declarator -> . IDENTIFIER EQUALS value
    (12) declarator -> . IDENTIFIER LBRACKET NUMBER RBRACKET
    (13) declarator -> . IDENTIFIER LBRACKET NUMBER RBRACKET EQUALS LBRACE array_values RBRACE
    (14) declarator -> . IDENTIFIER LBRACKET NUMBER RBRACKET LBRACKET NUMBER RBRACKET
    (15) declarator -> . IDENTIFIER LBRACKET NUMBER RBRACKET LBRACKET NUMBER RBRACKET EQUALS LBRACE array_values_2d RBRACE

    IDENTIFIER      shift and go to state 17

    declarator                     shift and go to state 16

state 12

    (6) stmt -> TYPE IDENTIFIER LPAREN . param_list RPAREN LBRACE stmt_list RBRACE
    (20) param_list -> . empty
    (21) param_list -> . param_list COMMA param
    (22) param_list -> . param
    (4) empty -> .
    (23) param -> . TYPE IDENTIFIER

    RPAREN          reduce using rule 4 (empty -> .)
    COMMA           reduce using rule 4 (empty -> .)
    TYPE            shift and go to state 18

    param_list                     shift and go to state 19
    empty                          shift and go to state 20
    param                          shift and go to state 21

state 13

    (11) declarator -> IDENTIFIER EQUALS . value
    (24) value -> . NUMBER
    (25) value -> . STRING_LITERAL
    (26) value -> . CHAR_LITERAL

    NUMBER          shift and go to state 23
    STRING_LITERAL  shift and go to state 24
    CHAR_LITERAL    shift and go to state 25

    value                          shift and go to state 22

state 14

    (12) declarator -> IDENTIFIER LBRACKET . NUMBER RBRACKET
    (13) declarator -> IDENTIFIER LBRACKET . NUMBER RBRACKET EQUALS LBRACE array_values RBRACE
    (14) declarator -> IDENTIFIER LBRACKET . NUMBER RBRACKET LBRACKET NUMBER RBRACKET
    (15) declarator -> IDENTIFIER LBRACKET . NUMBER RBRACKET LBRACKET NUMBER RBRACKET EQUALS LBRACE array_values_2d RBRACE

    NUMBER          shift and go to state 26


state 15

    (7) stmt -> TYPE MAIN LPAREN . RPAREN LBRACE stmt_list RBRACE

    RPAREN          shift and go to state 27


state 16

    (9) var_list -> var_list COMMA declarator .

    SEMICOLON       reduce using rule 9 (var_list -> var_list COMMA declarator .)
    COMMA           reduce using rule 9 (var_list -> var_list COMMA declarator .)


state 17

    (10) declarator -> IDENTIFIER .
    (11) declarator -> IDENTIFIER . EQUALS value
    (12) declarator -> IDENTIFIER . LBRACKET NUMBER RBRACKET
    (13) declarator -> IDENTIFIER . LBRACKET NUMBER RBRACKET EQUALS LBRACE array_values RBRACE
    (14) declarator -> IDENTIFIER . LBRACKET NUMBER RBRACKET LBRACKET NUMBER RBRACKET
    (15) declarator -> IDENTIFIER . LBRACKET NUMBER RBRACKET LBRACKET NUMBER RBRACKET EQUALS LBRACE array_values_2d RBRACE

    SEMICOLON       reduce using rule 10 (declarator -> IDENTIFIER .)
    COMMA           reduce using rule 10 (declarator -> IDENTIFIER .)
    EQUALS          shift and go to state 13
    LBRACKET        shift and go to state 14


state 18

    (23) param -> TYPE . IDENTIFIER

    IDENTIFIER      shift and go to state 28


state 19

    (6) stmt -> TYPE IDENTIFIER LPAREN param_list . RPAREN LBRACE stmt_list RBRACE
    (21) param_list -> param_list . COMMA param

    RPAREN          shift and go to state 29
    COMMA           shift and go to state 30


state 20

    (20) param_list -> empty .

    RPAREN          reduce using rule 20 (param_list -> empty .)
    COMMA           reduce using rule 20 (param_list -> empty .)


state 21

    (22) param_list -> param .

    RPAREN          reduce using rule 22 (param_list -> param .)
    COMMA           reduce using rule 22 (param_list -> param .)


state 22

    (11) declarator -> IDENTIFIER EQUALS value .

    SEMICOLON       reduce using rule 11 (declarator -> IDENTIFIER EQUALS value .)
    COMMA           reduce using rule 11 (declarator -> IDENTIFIER EQUALS value .)


state 23

    (24) value -> NUMBER .

    SEMICOLON       reduce using rule 24 (value -> NUMBER .)
    COMMA           reduce using rule 24 (value -> NUMBER .)
    RBRACE          reduce using rule 24 (value -> NUMBER .)


state 24

    (25) value -> STRING_LITERAL .

    SEMICOLON       reduce using rule 25 (value -> STRING_LITERAL .)
    COMMA           reduce using rule 25 (value -> STRING_LITERAL .)
    RBRACE          reduce using rule 25 (value -> STRING_LITERAL .)


state 25

    (26) value -> CHAR_LITERAL .

    SEMICOLON       reduce using rule 26 (value -> CHAR_LITERAL .)
    COMMA           reduce using rule 26 (value -> CHAR_LITERAL .)
    RBRACE          reduce using rule 26 (value -> CHAR_LITERAL .)


state 26

    (12) declarator -> IDENTIFIER LBRACKET NUMBER . RBRACKET
    (13) declarator -> IDENTIFIER LBRACKET NUMBER . RBRACKET EQUALS LBRACE array_values RBRACE
    (14) declarator -> IDENTIFIER LBRACKET NUMBER . RBRACKET LBRACKET NUMBER RBRACKET
    (15) declarator -> IDENTIFIER LBRACKET NUMBER . RBRACKET LBRACKET NUMBER RBRACKET EQUALS LBRACE array_values_2d RBRACE

    RBRACKET        shift and go to state 31


state 27

    (7) stmt -> TYPE MAIN LPAREN RPAREN . LBRACE stmt_list RBRACE

    LBRACE          shift and go to state 32


state 28

    (23) param -> TYPE IDENTIFIER .

    RPAREN          reduce using rule 23 (param -> TYPE IDENTIFIER .)
    COMMA           reduce using rule 23 (param -> TYPE IDENTIFIER .)


state 29

    (6) stmt -> TYPE IDENTIFIER LPAREN param_list RPAREN . LBRACE stmt_list RBRACE

    LBRACE          shift and go to state 33


state 30

    (21) param_list -> param_list COMMA . param
    (23) param -> . TYPE IDENTIFIER

    TYPE            shift and go to state 18

    param                          shift and go to state 34

state 31

    (12) declarator -> IDENTIFIER LBRACKET NUMBER RBRACKET .
    (13) declarator -> IDENTIFIER LBRACKET NUMBER RBRACKET . EQUALS LBRACE array_values RBRACE
    (14) declarator -> IDENTIFIER LBRACKET NUMBER RBRACKET . LBRACKET NUMBER RBRACKET
    (15) declarator -> IDENTIFIER LBRACKET NUMBER RBRACKET . LBRACKET NUMBER RBRACKET EQUALS LBRACE array_values_2d RBRACE

    SEMICOLON       reduce using rule 12 (declarator -> IDENTIFIER LBRACKET NUMBER RBRACKET .)
    COMMA           reduce using rule 12 (declarator -> IDENTIFIER LBRACKET NUMBER RBRACKET .)
    EQUALS          shift and go to state 36
    LBRACKET        shift and go to state 35


state 32

    (7) stmt -> TYPE MAIN LPAREN RPAREN LBRACE . stmt_list RBRACE
    (1) stmt_list -> . stmt_list stmt
    (2) stmt_list -> . stmt
    (3) stmt_list -> . empty
    (5) stmt -> . TYPE var_list SEMICOLON
    (6) stmt -> . TYPE IDENTIFIER LPAREN param_list RPAREN LBRACE stmt_list RBRACE
    (7) stmt -> . TYPE MAIN LPAREN RPAREN LBRACE stmt_list RBRACE
    (4) empty -> .

  ! shift/reduce conflict for TYPE resolved as shift
    TYPE            shift and go to state 4
    RBRACE          reduce using rule 4 (empty -> .)

  ! TYPE            [ reduce using rule 4 (empty -> .) ]

    stmt_list                      shift and go to state 37
    stmt                           shift and go to state 2
    empty                          shift and go to state 3

state 33

    (6) stmt -> TYPE IDENTIFIER LPAREN param_list RPAREN LBRACE . stmt_list RBRACE
    (1) stmt_list -> . stmt_list stmt
    (2) stmt_list -> . stmt
    (3) stmt_list -> . empty
    (5) stmt -> . TYPE var_list SEMICOLON
    (6) stmt -> . TYPE IDENTIFIER LPAREN param_list RPAREN LBRACE stmt_list RBRACE
    (7) stmt -> . TYPE MAIN LPAREN RPAREN LBRACE stmt_list RBRACE
    (4) empty -> .

  ! shift/reduce conflict for TYPE resolved as shift
    TYPE            shift and go to state 4
    RBRACE          reduce using rule 4 (empty -> .)

  ! TYPE            [ reduce using rule 4 (empty -> .) ]

    stmt_list                      shift and go to state 38
    stmt                           shift and go to state 2
    empty                          shift and go to state 3

state 34

    (21) param_list -> param_list COMMA param .

    RPAREN          reduce using rule 21 (param_list -> param_list COMMA param .)
    COMMA           reduce using rule 21 (param_list -> param_list COMMA param .)


state 35

    (14) declarator -> IDENTIFIER LBRACKET NUMBER RBRACKET LBRACKET . NUMBER RBRACKET
    (15) declarator -> IDENTIFIER LBRACKET NUMBER RBRACKET LBRACKET . NUMBER RBRACKET EQUALS LBRACE array_values_2d RBRACE

    NUMBER          shift and go to state 39


state 36

    (13) declarator -> IDENTIFIER LBRACKET NUMBER RBRACKET EQUALS . LBRACE array_values RBRACE

    LBRACE          shift and go to state 40


state 37

    (7) stmt -> TYPE MAIN LPAREN RPAREN LBRACE stmt_list . RBRACE
    (1) stmt_list -> stmt_list . stmt
    (5) stmt -> . TYPE var_list SEMICOLON
    (6) stmt -> . TYPE IDENTIFIER LPAREN param_list RPAREN LBRACE stmt_list RBRACE
    (7) stmt -> . TYPE MAIN LPAREN RPAREN LBRACE stmt_list RBRACE

    RBRACE          shift and go to state 41
    TYPE            shift and go to state 4

    stmt                           shift and go to state 5

state 38

    (6) stmt -> TYPE IDENTIFIER LPAREN param_list RPAREN LBRACE stmt_list . RBRACE
    (1) stmt_list -> stmt_list . stmt
    (5) stmt -> . TYPE var_list SEMICOLON
    (6) stmt -> . TYPE IDENTIFIER LPAREN param_list RPAREN LBRACE stmt_list RBRACE
    (7) stmt -> . TYPE MAIN LPAREN RPAREN LBRACE stmt_list RBRACE

    RBRACE          shift and go to state 42
    TYPE            shift and go to state 4

    stmt                           shift and go to state 5

state 39

    (14) declarator -> IDENTIFIER LBRACKET NUMBER RBRACKET LBRACKET NUMBER . RBRACKET
    (15) declarator -> IDENTIFIER LBRACKET NUMBER RBRACKET LBRACKET NUMBER . RBRACKET EQUALS LBRACE array_values_2d RBRACE

    RBRACKET        shift and go to state 43


state 40

    (13) declarator -> IDENTIFIER LBRACKET NUMBER RBRACKET EQUALS LBRACE . array_values RBRACE
    (16) array_values -> . value
    (17) array_values -> . array_values COMMA value
    (24) value -> . NUMBER
    (25) value -> . STRING_LITERAL
    (26) value -> . CHAR_LITERAL

    NUMBER          shift and go to state 23
    STRING_LITERAL  shift and go to state 24
    CHAR_LITERAL    shift and go to state 25

    array_values                   shift and go to state 44
    value                          shift and go to state 45

state 41

    (7) stmt -> TYPE MAIN LPAREN RPAREN LBRACE stmt_list RBRACE .

    TYPE            reduce using rule 7 (stmt -> TYPE MAIN LPAREN RPAREN LBRACE stmt_list RBRACE .)
    $end            reduce using rule 7 (stmt -> TYPE MAIN LPAREN RPAREN LBRACE stmt_list RBRACE .)
    RBRACE          reduce using rule 7 (stmt -> TYPE MAIN LPAREN RPAREN LBRACE stmt_list RBRACE .)


state 42

    (6) stmt -> TYPE IDENTIFIER LPAREN param_list RPAREN LBRACE stmt_list RBRACE .

    TYPE            reduce using rule 6 (stmt -> TYPE IDENTIFIER LPAREN param_list RPAREN LBRACE stmt_list RBRACE .)
    $end            reduce using rule 6 (stmt -> TYPE IDENTIFIER LPAREN param_list RPAREN LBRACE stmt_list RBRACE .)
    RBRACE          reduce using rule 6 (stmt -> TYPE IDENTIFIER LPAREN param_list RPAREN LBRACE stmt_list RBRACE .)


state 43

    (14) declarator -> IDENTIFIER LBRACKET NUMBER RBRACKET LBRACKET NUMBER RBRACKET .
    (15) declarator -> IDENTIFIER LBRACKET NUMBER RBRACKET LBRACKET NUMBER RBRACKET . EQUALS LBRACE array_values_2d RBRACE

    SEMICOLON       reduce using rule 14 (declarator -> IDENTIFIER LBRACKET NUMBER RBRACKET LBRACKET NUMBER RBRACKET .)
    COMMA           reduce using rule 14 (declarator -> IDENTIFIER LBRACKET NUMBER RBRACKET LBRACKET NUMBER RBRACKET .)
    EQUALS          shift and go to state 46


state 44

    (13) declarator -> IDENTIFIER LBRACKET NUMBER RBRACKET EQUALS LBRACE array_values . RBRACE
    (17) array_values -> array_values . COMMA value

    RBRACE          shift and go to state 47
    COMMA           shift and go to state 48


state 45

    (16) array_values -> value .

    RBRACE          reduce using rule 16 (array_values -> value .)
    COMMA           reduce using rule 16 (array_values -> value .)


state 46

    (15) declarator -> IDENTIFIER LBRACKET NUMBER RBRACKET LBRACKET NUMBER RBRACKET EQUALS . LBRACE array_values_2d RBRACE

    LBRACE          shift and go to state 49


state 47

    (13) declarator -> IDENTIFIER LBRACKET NUMBER RBRACKET EQUALS LBRACE array_values RBRACE .

    SEMICOLON       reduce using rule 13 (declarator -> IDENTIFIER LBRACKET NUMBER RBRACKET EQUALS LBRACE array_values RBRACE .)
    COMMA           reduce using rule 13 (declarator -> IDENTIFIER LBRACKET NUMBER RBRACKET EQUALS LBRACE array_values RBRACE .)


state 48

    (17) array_values -> array_values COMMA . value
    (24) value -> . NUMBER
    (25) value -> . STRING_LITERAL
    (26) value -> . CHAR_LITERAL

    NUMBER          shift and go to state 23
    STRING_LITERAL  shift and go to state 24
    CHAR_LITERAL    shift and go to state 25

    value                          shift and go to state 50

state 49

    (15) declarator -> IDENTIFIER LBRACKET NUMBER RBRACKET LBRACKET NUMBER RBRACKET EQUALS LBRACE . array_values_2d RBRACE
    (18) array_values_2d -> . LBRACE array_values RBRACE
    (19) array_values_2d -> . array_values_2d COMMA LBRACE array_values RBRACE

    LBRACE          shift and go to state 51

    array_values_2d                shift and go to state 52

state 50

    (17) array_values -> array_values COMMA value .

    RBRACE          reduce using rule 17 (array_values -> array_values COMMA value .)
    COMMA           reduce using rule 17 (array_values -> array_values COMMA value .)


state 51

    (18) array_values_2d -> LBRACE . array_values RBRACE
    (16) array_values -> . value
    (17) array_values -> . array_values COMMA value
    (24) value -> . NUMBER
    (25) value -> . STRING_LITERAL
    (26) value -> . CHAR_LITERAL

    NUMBER          shift and go to state 23
    STRING_LITERAL  shift and go to state 24
    CHAR_LITERAL    shift and go to state 25

    array_values                   shift and go to state 53
    value                          shift and go to state 45

state 52

    (15) declarator -> IDENTIFIER LBRACKET NUMBER RBRACKET LBRACKET NUMBER RBRACKET EQUALS LBRACE array_values_2d . RBRACE
    (19) array_values_2d -> array_values_2d . COMMA LBRACE array_values RBRACE

    RBRACE          shift and go to state 54
    COMMA           shift and go to state 55


state 53

    (18) array_values_2d -> LBRACE array_values . RBRACE
    (17) array_values -> array_values . COMMA value

    RBRACE          shift and go to state 56
    COMMA           shift and go to state 48


state 54

    (15) declarator -> IDENTIFIER LBRACKET NUMBER RBRACKET LBRACKET NUMBER RBRACKET EQUALS LBRACE array_values_2d RBRACE .

    SEMICOLON       reduce using rule 15 (declarator -> IDENTIFIER LBRACKET NUMBER RBRACKET LBRACKET NUMBER RBRACKET EQUALS LBRACE array_values_2d RBRACE .)
    COMMA           reduce using rule 15 (declarator -> IDENTIFIER LBRACKET NUMBER RBRACKET LBRACKET NUMBER RBRACKET EQUALS LBRACE array_values_2d RBRACE .)


state 55

    (19) array_values_2d -> array_values_2d COMMA . LBRACE array_values RBRACE

    LBRACE          shift and go to state 57


state 56

    (18) array_values_2d -> LBRACE array_values RBRACE .

    RBRACE          reduce using rule 18 (array_values_2d -> LBRACE array_values RBRACE .)
    COMMA           reduce using rule 18 (array_values_2d -> LBRACE array_values RBRACE .)


state 57

    (19) array_values_2d -> array_values_2d COMMA LBRACE . array_values RBRACE
    (16) array_values -> . value
    (17) array_values -> . array_values COMMA value
    (24) value -> . NUMBER
    (25) value -> . STRING_LITERAL
    (26) value -> . CHAR_LITERAL

    NUMBER          shift and go to state 23
    STRING_LITERAL  shift and go to state 24
    CHAR_LITERAL    shift and go to state 25

    array_values                   shift and go to state 58
    value                          shift and go to state 45

state 58

    (19) array_values_2d -> array_values_2d COMMA LBRACE array_values . RBRACE
    (17) array_values -> array_values . COMMA value

    RBRACE          shift and go to state 59
    COMMA           shift and go to state 48


state 59

    (19) array_values_2d -> array_values_2d COMMA LBRACE array_values RBRACE .

    RBRACE          reduce using rule 19 (array_values_2d -> array_values_2d COMMA LBRACE array_values RBRACE .)
    COMMA           reduce using rule 19 (array_values_2d -> array_values_2d COMMA LBRACE array_values RBRACE .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for TYPE in state 0 resolved as shift
WARNING: shift/reduce conflict for TYPE in state 32 resolved as shift
WARNING: shift/reduce conflict for TYPE in state 33 resolved as shift
